version: '3.4'

services:
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - network-microservice

  zookeeper:
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - network-microservice

  kafka:
    container_name: kafka
    restart: always
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - '9092:9092'
    networks:
      - network-microservice
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  consul:
    hostname: consul
    container_name: consul
    restart: always
    networks:
      - network-microservice
    volumes:
      - consul_data:/consul/config
    ports:
      - "8500:8500"

  elasticsearch:
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    networks:
      - network-microservice
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    networks:
      - network-microservice
    depends_on:
      - elasticsearch

  mongoclient:
    container_name: mongoclient
    restart: always
    networks:
      - network-microservice
    ports:
      - "3000:3000"

  outboxdb:
    container_name: outboxdb
    restart: always
    ports:
      - "27017:27017"
    networks:
      - network-microservice
    volumes:
      - outbox_mongo_data:/data/db

  catalog_mongodb:
    container_name: catalog_mongodb
    restart: always
    ports:
      - "27018:27018"
    networks:
      - network-microservice
    command: ["mongod", "--port", "27018"]
    volumes:
      - catalog_mongo_data:/data/db

  catalog_mssqldb:
    container_name: catalog_mssqldb
    restart: always
    networks:
      - network-microservice
    environment:
      SA_PASSWORD: "SwN12345678"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"

  catalog_redisdb:
    container_name: catalog_redisdb
    restart: always   
    networks:
      - network-microservice 
    ports:
      - "6379:6379"
  
  catalog.api:
    container_name: catalog.api
    networks:
      - network-microservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "IdentityOptions:Authority=http://identityserver:80"
      - "MongoDbSettings:ConnectionString=mongodb://catalog_mongodb:27018"
      - "ConnectionStrings:SqlConnectionString=Server=catalog_mssqldb;Database=CatalogDb;User Id=sa;Password=SwN12345678"
      - "CacheSettings:ConnectionString=catalog_redisdb:6379"
      - "MessageBrokersOptions:hostnames__0=rabbitmq"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
      - "ElasticApm:ServerUrls=http://apm:8200"
      - "ConsulOptions:ConsulAddress=http://consul:8500"
      - "ConsulOptions:ServiceAddress=http://catalog.api:80"
      - "Serilog:WriteTo__0:Args:nodeUris=http://elasticsearch:9200"
      - "OutboxOptions:ConnectionString=mongodb://outboxdb:27017"
    depends_on:
      - catalog_mongodb
      - catalog_mssqldb
      - catalog_redisdb
      - consul
      - rabbitmq
      - identityserver
    ports:
      - "8000:80"
  
  basket_redisdb:
    container_name: basket_redisdb
    networks:
      - network-microservice
    restart: always    
    command: --port 6380
    ports:
      - "6380:6380"

  basket.api:
    container_name: basket.api
    networks:
      - network-microservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    depends_on:
      - catalog_redisdb
      - consul
      - rabbitmq
    ports:
      - "8001:80"

  ocelotapigw:
    container_name: ocelotapigw
    networks:
      - network-microservice
      - network-gateway    
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "IdentityOptions:Authority=http://identityserver:80"
    ports:
      - "8010:80"
    depends_on:
      - catalog.api
      - identityserver

  identityserver:
    container_name: identityserver
    networks:
      - network-microservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    ports:
      - "8011:80"